# Generated by Django 4.0.6 on 2022-07-18 14:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('which_class', models.CharField(help_text='Цифра и Буква', max_length=5, verbose_name='Какой класс')),
                ('progress', models.FloatField(default=100, help_text='В процентах', verbose_name='Успеваемость')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('region', models.CharField(max_length=50, verbose_name='Область')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('village', models.CharField(blank=1, help_text='Необязательно', max_length=255, null=1, verbose_name='Село')),
                ('quantity_students', models.PositiveIntegerField(default=0, verbose_name='Кол-во учеников')),
                ('quantity_teachers', models.PositiveIntegerField(default=0, verbose_name='Кол-во учителей')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=100, verbose_name='Полное имя')),
                ('gender', models.CharField(choices=[('M', 'MAN'), ('W', 'WOMAN')], max_length=1, verbose_name='Пол')),
                ('email', models.EmailField(help_text='Для получение логина', max_length=254)),
                ('position', models.CharField(max_length=200, verbose_name='Должность')),
                ('image', models.ImageField(blank=1, null=1, upload_to='photo/teachers/%m/%d', verbose_name='Фото')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='account.school', verbose_name='Школа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Учетель',
                'verbose_name_plural': 'Учетеля',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название предмета')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='account.school', verbose_name='Школа')),
                ('teacher', models.ForeignKey(null=1, on_delete=django.db.models.deletion.SET_NULL, to='account.teacher', verbose_name='Учитель')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=100, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('M', 'MAN'), ('W', 'WOMAN')], max_length=1, verbose_name='Пол')),
                ('email', models.EmailField(help_text='Для получение логина', max_length=254)),
                ('position', models.CharField(blank=1, max_length=255, null=1, verbose_name='Должность')),
                ('is_minister', models.BooleanField(default=False, verbose_name='Министр')),
                ('phone_number', models.CharField(help_text='Ученика', max_length=100, verbose_name='Номер телефона')),
                ('fullname_father', models.CharField(blank=1, max_length=255, null=1, verbose_name='Полное имя отца')),
                ('phone_number_f', models.CharField(blank=1, max_length=100, null=1, verbose_name='Телефон номер отца')),
                ('fullname_mother', models.CharField(blank=1, max_length=255, null=1, verbose_name='Полное имя мамы')),
                ('phone_number_m', models.CharField(blank=1, max_length=100, null=1, verbose_name='Телефон номер мамы')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='account.grade', verbose_name='Класс')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='account.school', verbose_name='Школа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.AddField(
            model_name='grade',
            name='classroom_teacher',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='grade', to='account.teacher', verbose_name='Классный руководитель'),
        ),
        migrations.AddField(
            model_name='grade',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='account.school', verbose_name='Школа'),
        ),
        migrations.AddField(
            model_name='grade',
            name='subjects',
            field=models.ManyToManyField(related_name='use_grades', to='account.subject', verbose_name='Предметы'),
        ),
        migrations.AlterUniqueTogether(
            name='grade',
            unique_together={('school', 'which_class')},
        ),
    ]
